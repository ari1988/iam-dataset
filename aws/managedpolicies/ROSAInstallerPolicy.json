{
  "access_levels": [
    "List",
    "Read",
    "Tagging",
    "Write",
    "Permissions management"
  ],
  "arn": "arn:aws:iam::aws:policy/service-role/ROSAInstallerPolicy",
  "createdate": "2025-04-10T23:52:06Z",
  "credentials_exposure": false,
  "data_access": true,
  "deprecated": false,
  "document": {
    "Statement": [
      {
        "Action": [
          "ec2:DescribeAvailabilityZones",
          "ec2:DescribeInternetGateways",
          "ec2:DescribeInstances",
          "ec2:DescribeInstanceTypes",
          "ec2:DescribeRegions",
          "ec2:DescribeReservedInstancesOfferings",
          "ec2:DescribeRouteTables",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeSecurityGroupRules",
          "ec2:DescribeSubnets",
          "ec2:DescribeVpcAttribute",
          "ec2:DescribeVpcs",
          "ec2:DescribeInstanceTypeOfferings",
          "elasticloadbalancing:DescribeAccountLimits",
          "elasticloadbalancing:DescribeLoadBalancers",
          "iam:GetOpenIDConnectProvider",
          "iam:GetRole",
          "route53:GetHostedZone",
          "route53:ListHostedZones",
          "route53:ListHostedZonesByName",
          "route53:ListResourceRecordSets",
          "route53:GetAccountLimit",
          "servicequotas:GetServiceQuota"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "ReadPermissions"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": [
              "ec2.amazonaws.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:*:iam::*:role/*-ROSA-Worker-Role"
        ],
        "Sid": "PassRoleToEC2"
      },
      {
        "Action": [
          "iam:AddRoleToInstanceProfile",
          "iam:RemoveRoleFromInstanceProfile",
          "iam:DeleteInstanceProfile",
          "iam:GetInstanceProfile"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:instance-profile/rosa-service-managed-*"
        ],
        "Sid": "ManageInstanceProfiles"
      },
      {
        "Action": [
          "iam:CreateInstanceProfile",
          "iam:TagInstanceProfile"
        ],
        "Condition": {
          "StringEquals": {
            "aws:RequestTag/red-hat-managed": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:instance-profile/rosa-service-managed-*"
        ],
        "Sid": "CreateInstanceProfiles"
      },
      {
        "Action": [
          "secretsmanager:GetSecretValue"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/red-hat-managed": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "*"
        ],
        "Sid": "GetSecretValue"
      },
      {
        "Action": [
          "route53:ChangeResourceRecordSets"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
              "*.openshiftapps.com",
              "*.devshift.org",
              "*.hypershift.local",
              "*.openshiftusgov.com",
              "*.devshiftusgov.com"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "Route53ManageRecords"
      },
      {
        "Action": [
          "route53:ChangeTagsForResource",
          "route53:CreateHostedZone",
          "route53:DeleteHostedZone"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "Route53Manage"
      },
      {
        "Action": [
          "ec2:CreateTags"
        ],
        "Condition": {
          "StringEquals": {
            "ec2:CreateAction": [
              "RunInstances"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:instance/*",
          "arn:aws:ec2:*:*:volume/*"
        ],
        "Sid": "CreateTags"
      },
      {
        "Action": [
          "ec2:RunInstances"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:subnet/*",
          "arn:aws:ec2:*:*:network-interface/*",
          "arn:aws:ec2:*:*:security-group/*",
          "arn:aws:ec2:*:*:snapshot/*"
        ],
        "Sid": "RunInstancesNoCondition"
      },
      {
        "Action": [
          "ec2:RunInstances"
        ],
        "Condition": {
          "StringEquals": {
            "aws:RequestTag/red-hat-managed": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:instance/*",
          "arn:aws:ec2:*:*:volume/*"
        ],
        "Sid": "RunInstancesRestrictedRequestTag"
      },
      {
        "Action": [
          "ec2:RunInstances"
        ],
        "Condition": {
          "StringEquals": {
            "ec2:Owner": [
              "531415883065",
              "251351625822",
              "210686502322"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:image/*"
        ],
        "Sid": "RunInstancesRedHatOwnedAMIs"
      },
      {
        "Action": [
          "ec2:TerminateInstances",
          "ec2:GetConsoleOutput"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/red-hat-managed": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:ec2:*:*:instance/*",
        "Sid": "ManageInstancesRestrictedResourceTag"
      },
      {
        "Action": [
          "kms:CreateGrant"
        ],
        "Condition": {
          "Bool": {
            "kms:GrantIsForAWSResource": true
          },
          "StringEquals": {
            "aws:ResourceTag/red-hat": "true"
          },
          "StringLike": {
            "kms:ViaService": "ec2.*.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "CreateGrantRestrictedResourceTag"
      },
      {
        "Action": [
          "kms:DescribeKey",
          "kms:GenerateDataKeyWithoutPlaintext"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/red-hat": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "ManagedKMSRestrictedResourceTag"
      },
      {
        "Action": [
          "ec2:CreateSecurityGroup"
        ],
        "Condition": {
          "StringEquals": {
            "aws:RequestTag/red-hat-managed": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:security-group*/*"
        ],
        "Sid": "CreateSecurityGroups"
      },
      {
        "Action": [
          "ec2:DeleteSecurityGroup"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/red-hat-managed": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:security-group*/*"
        ],
        "Sid": "DeleteSecurityGroup"
      },
      {
        "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/red-hat-managed": "true"
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:security-group*/*"
        ],
        "Sid": "SecurityGroupIngressEgress"
      },
      {
        "Action": [
          "ec2:CreateSecurityGroup"
        ],
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:vpc/*"
        ],
        "Sid": "CreateSecurityGroupsVPCNoCondition"
      },
      {
        "Action": [
          "ec2:CreateTags"
        ],
        "Condition": {
          "StringEquals": {
            "ec2:CreateAction": [
              "CreateSecurityGroup"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:security-group/*"
        ],
        "Sid": "CreateTagsRestrictedActions"
      },
      {
        "Action": [
          "ec2:CreateTags"
        ],
        "Condition": {
          "ForAllValues:StringLike": {
            "aws:TagKeys": [
              "kubernetes.io/cluster/*"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": [
          "arn:aws:ec2:*:*:subnet/*"
        ],
        "Sid": "CreateTagsK8sSubnet"
      },
      {
        "Action": [
          "iam:ListAttachedRolePolicies",
          "iam:ListRolePolicies"
        ],
        "Condition": {
          "StringEquals": {
            "aws:ResourceTag/red-hat-managed": "true"
          }
        },
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:role/*",
        "Sid": "ListPoliciesAttachedToRoles"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [
    {
      "access_level": "List",
      "action": "ec2:DescribeAvailabilityZones",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeAvailabilityZones",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeInternetGateways",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeInternetGateways",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeInstances",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeInstances",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeInstanceTypes",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeInstanceTypes",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeRegions",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeRegions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeReservedInstancesOfferings",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeReservedInstancesOfferings",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeRouteTables",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeRouteTables",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeSecurityGroups",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeSecurityGroups",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeSecurityGroupRules",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeSecurityGroupRules",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeSubnets",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeSubnets",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeVpcAttribute",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeVpcAttribute",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeVpcs",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeVpcs",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeInstanceTypeOfferings",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeInstanceTypeOfferings",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "elasticloadbalancing:DescribeAccountLimits",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticloadbalancing:DescribeAccountLimits",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "elasticloadbalancing:DescribeLoadBalancers",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "elasticloadbalancing:DescribeLoadBalancers",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "iam:GetOpenIDConnectProvider",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:GetOpenIDConnectProvider",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "iam:GetRole",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:GetRole",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "route53:GetHostedZone",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "route53:GetHostedZone",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "route53:ListHostedZones",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "route53:ListHostedZones",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "route53:ListHostedZonesByName",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "route53:ListHostedZonesByName",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "route53:ListResourceRecordSets",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "route53:ListResourceRecordSets",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "route53:GetAccountLimit",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "route53:GetAccountLimit",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "servicequotas:GetServiceQuota",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "servicequotas:GetServiceQuota",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "iam:PassRole",
      "condition": {
        "StringEquals": {
          "iam:PassedToService": [
            "ec2.amazonaws.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:PassRole",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "iam:AddRoleToInstanceProfile",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:AddRoleToInstanceProfile",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "iam:RemoveRoleFromInstanceProfile",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:RemoveRoleFromInstanceProfile",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "iam:DeleteInstanceProfile",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:DeleteInstanceProfile",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Read",
      "action": "iam:GetInstanceProfile",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:GetInstanceProfile",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "iam:CreateInstanceProfile",
      "condition": {
        "StringEquals": {
          "aws:RequestTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:CreateInstanceProfile",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Tagging",
      "action": "iam:TagInstanceProfile",
      "condition": {
        "StringEquals": {
          "aws:RequestTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:TagInstanceProfile",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "secretsmanager:GetSecretValue",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "secretsmanager:GetSecretValue",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "route53:ChangeResourceRecordSets",
      "condition": {
        "ForAllValues:StringLike": {
          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
            "*.openshiftapps.com",
            "*.devshift.org",
            "*.hypershift.local",
            "*.openshiftusgov.com",
            "*.devshiftusgov.com"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "route53:ChangeResourceRecordSets",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "route53:ChangeTagsForResource",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "route53:ChangeTagsForResource",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "route53:CreateHostedZone",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "route53:CreateHostedZone",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "route53:DeleteHostedZone",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "route53:DeleteHostedZone",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "ec2:CreateTags",
      "condition": {
        "StringEquals": {
          "ec2:CreateAction": [
            "RunInstances"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateTags",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:RunInstances",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:RunInstances",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:RunInstances",
      "condition": {
        "StringEquals": {
          "aws:RequestTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:RunInstances",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:RunInstances",
      "condition": {
        "StringEquals": {
          "ec2:Owner": [
            "531415883065",
            "251351625822",
            "210686502322"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:RunInstances",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:TerminateInstances",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:TerminateInstances",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "ec2:GetConsoleOutput",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:GetConsoleOutput",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "kms:CreateGrant",
      "condition": {
        "Bool": {
          "kms:GrantIsForAWSResource": true
        },
        "StringEquals": {
          "aws:ResourceTag/red-hat": "true"
        },
        "StringLike": {
          "kms:ViaService": "ec2.*.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": true,
      "effective_action": "kms:CreateGrant",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Read",
      "action": "kms:DescribeKey",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:DescribeKey",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "kms:GenerateDataKeyWithoutPlaintext",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "kms:GenerateDataKeyWithoutPlaintext",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:CreateSecurityGroup",
      "condition": {
        "StringEquals": {
          "aws:RequestTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateSecurityGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:DeleteSecurityGroup",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DeleteSecurityGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:AuthorizeSecurityGroupIngress",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:AuthorizeSecurityGroupIngress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:AuthorizeSecurityGroupEgress",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:AuthorizeSecurityGroupEgress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:RevokeSecurityGroupIngress",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:RevokeSecurityGroupIngress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:RevokeSecurityGroupEgress",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:RevokeSecurityGroupEgress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:CreateSecurityGroup",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateSecurityGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "ec2:CreateTags",
      "condition": {
        "StringEquals": {
          "ec2:CreateAction": [
            "CreateSecurityGroup"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateTags",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "ec2:CreateTags",
      "condition": {
        "ForAllValues:StringLike": {
          "aws:TagKeys": [
            "kubernetes.io/cluster/*"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateTags",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "iam:ListAttachedRolePolicies",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:ListAttachedRolePolicies",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "iam:ListRolePolicies",
      "condition": {
        "StringEquals": {
          "aws:ResourceTag/red-hat-managed": "true"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:ListRolePolicies",
      "privesc": false,
      "resource_exposure": false
    }
  ],
  "grantless": false,
  "malformed": false,
  "name": "ROSAInstallerPolicy",
  "privesc": true,
  "resource_exposure": true,
  "undocumented_actions": false,
  "unknown_actions": [],
  "updatedate": "2025-04-10T23:52:06+00:00",
  "version": "v5"
}