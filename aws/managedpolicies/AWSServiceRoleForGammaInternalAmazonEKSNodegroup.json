{
  "access_levels": [
    "List",
    "Read",
    "Tagging",
    "Write",
    "Permissions management"
  ],
  "arn": null,
  "createdate": "2020-01-16T21:47:47Z",
  "credentials_exposure": false,
  "data_access": false,
  "deprecated": true,
  "document": {
    "Statement": [
      {
        "Action": [
          "ec2:RevokeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:DescribeInstances",
          "ec2:RevokeSecurityGroupEgress",
          "ec2:DeleteSecurityGroup"
        ],
        "Condition": {
          "ForAnyValue:StringLike": {
            "ec2:ResourceTag/eks": "*"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "SharedSecurityGroupRelatedPermissions"
      },
      {
        "Action": [
          "ec2:RevokeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:DescribeInstances",
          "ec2:RevokeSecurityGroupEgress",
          "ec2:DeleteSecurityGroup"
        ],
        "Condition": {
          "ForAnyValue:StringLike": {
            "ec2:ResourceTag/eks:nodegroup-name": "*"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "EKSCreatedSecurityGroupRelatedPermissions"
      },
      {
        "Action": [
          "ec2:DeleteLaunchTemplate",
          "ec2:CreateLaunchTemplateVersion"
        ],
        "Condition": {
          "StringLike": {
            "ec2:ResourceTag/eks:nodegroup-name": "*"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "LaunchTemplateRelatedPermissions"
      },
      {
        "Action": [
          "autoscaling:UpdateAutoScalingGroup",
          "autoscaling:DeleteAutoScalingGroup",
          "autoscaling:TerminateInstanceInAutoScalingGroup",
          "autoscaling:CompleteLifecycleAction",
          "autoscaling:PutLifecycleHook",
          "autoscaling:PutNotificationConfiguration"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:autoscaling:*:*:*:autoScalingGroupName/eks-*",
        "Sid": "AutoscalingRelatedPermissions"
      },
      {
        "Action": [
          "iam:CreateServiceLinkedRole"
        ],
        "Condition": {
          "StringEquals": {
            "iam:AWSServiceName": "autoscaling.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowAutoscalingToCreateSLR"
      },
      {
        "Action": [
          "autoscaling:CreateOrUpdateTags",
          "autoscaling:CreateAutoScalingGroup"
        ],
        "Condition": {
          "ForAnyValue:StringEquals": {
            "aws:TagKeys": [
              "eks",
              "eks:cluster-name",
              "eks:nodegroup-name"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowASGCreationByEKS"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEqualsIfExists": {
            "iam:PassedToService": "iam.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowPassRoleToIAM"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEqualsIfExists": {
            "iam:PassedToService": "autoscaling.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowPassRoleToAutoscaling"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Condition": {
          "StringEqualsIfExists": {
            "iam:PassedToService": "ec2.amazonaws.com"
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "AllowPassRoleToEC2"
      },
      {
        "Action": [
          "iam:GetRole",
          "ec2:CreateLaunchTemplate",
          "ec2:DescribeInstances",
          "iam:GetInstanceProfile",
          "ec2:DescribeLaunchTemplates",
          "autoscaling:DescribeAutoScalingGroups",
          "ec2:CreateSecurityGroup",
          "ec2:DescribeLaunchTemplateVersions",
          "ec2:RunInstances",
          "ec2:DescribeSecurityGroups",
          "ec2:GetConsoleOutput",
          "ec2:DescribeSubnets"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "PermissionsToManageResourcesForNodegroups"
      },
      {
        "Action": [
          "iam:CreateInstanceProfile",
          "iam:DeleteInstanceProfile",
          "iam:RemoveRoleFromInstanceProfile",
          "iam:AddRoleToInstanceProfile"
        ],
        "Effect": "Allow",
        "Resource": "arn:aws:iam::*:instance-profile/eks-*",
        "Sid": "PermissionsToCreateAndManageInstanceProfiles"
      },
      {
        "Action": [
          "ec2:CreateTags",
          "ec2:DeleteTags"
        ],
        "Condition": {
          "ForAnyValue:StringLike": {
            "aws:TagKeys": [
              "eks",
              "eks:cluster-name",
              "eks:nodegroup-name",
              "kubernetes.io/cluster/*"
            ]
          }
        },
        "Effect": "Allow",
        "Resource": "*",
        "Sid": "PermissionsToManageEKSAndKubernetesTags"
      }
    ],
    "Version": "2012-10-17"
  },
  "effective_actions": [
    {
      "access_level": "Write",
      "action": "ec2:RevokeSecurityGroupIngress",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:RevokeSecurityGroupIngress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:AuthorizeSecurityGroupEgress",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:AuthorizeSecurityGroupEgress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:AuthorizeSecurityGroupIngress",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:AuthorizeSecurityGroupIngress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeInstances",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeInstances",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:RevokeSecurityGroupEgress",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:RevokeSecurityGroupEgress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:DeleteSecurityGroup",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DeleteSecurityGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:RevokeSecurityGroupIngress",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks:nodegroup-name": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:RevokeSecurityGroupIngress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:AuthorizeSecurityGroupEgress",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks:nodegroup-name": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:AuthorizeSecurityGroupEgress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:AuthorizeSecurityGroupIngress",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks:nodegroup-name": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:AuthorizeSecurityGroupIngress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeInstances",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks:nodegroup-name": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeInstances",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:RevokeSecurityGroupEgress",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks:nodegroup-name": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:RevokeSecurityGroupEgress",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:DeleteSecurityGroup",
      "condition": {
        "ForAnyValue:StringLike": {
          "ec2:ResourceTag/eks:nodegroup-name": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DeleteSecurityGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:DeleteLaunchTemplate",
      "condition": {
        "StringLike": {
          "ec2:ResourceTag/eks:nodegroup-name": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DeleteLaunchTemplate",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:CreateLaunchTemplateVersion",
      "condition": {
        "StringLike": {
          "ec2:ResourceTag/eks:nodegroup-name": "*"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateLaunchTemplateVersion",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "autoscaling:UpdateAutoScalingGroup",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "autoscaling:UpdateAutoScalingGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "autoscaling:DeleteAutoScalingGroup",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "autoscaling:DeleteAutoScalingGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "autoscaling:TerminateInstanceInAutoScalingGroup",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "autoscaling:TerminateInstanceInAutoScalingGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "autoscaling:CompleteLifecycleAction",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "autoscaling:CompleteLifecycleAction",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "autoscaling:PutLifecycleHook",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "autoscaling:PutLifecycleHook",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "autoscaling:PutNotificationConfiguration",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "autoscaling:PutNotificationConfiguration",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "iam:CreateServiceLinkedRole",
      "condition": {
        "StringEquals": {
          "iam:AWSServiceName": "autoscaling.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:CreateServiceLinkedRole",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Tagging",
      "action": "autoscaling:CreateOrUpdateTags",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:TagKeys": [
            "eks",
            "eks:cluster-name",
            "eks:nodegroup-name"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "autoscaling:CreateOrUpdateTags",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "autoscaling:CreateAutoScalingGroup",
      "condition": {
        "ForAnyValue:StringEquals": {
          "aws:TagKeys": [
            "eks",
            "eks:cluster-name",
            "eks:nodegroup-name"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "autoscaling:CreateAutoScalingGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "iam:PassRole",
      "condition": {
        "StringEqualsIfExists": {
          "iam:PassedToService": "iam.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:PassRole",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "iam:PassRole",
      "condition": {
        "StringEqualsIfExists": {
          "iam:PassedToService": "autoscaling.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:PassRole",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "iam:PassRole",
      "condition": {
        "StringEqualsIfExists": {
          "iam:PassedToService": "ec2.amazonaws.com"
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:PassRole",
      "privesc": true,
      "resource_exposure": true
    },
    {
      "access_level": "Read",
      "action": "iam:GetRole",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:GetRole",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:CreateLaunchTemplate",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateLaunchTemplate",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeInstances",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeInstances",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "iam:GetInstanceProfile",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:GetInstanceProfile",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeLaunchTemplates",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeLaunchTemplates",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "autoscaling:DescribeAutoScalingGroups",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "autoscaling:DescribeAutoScalingGroups",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:CreateSecurityGroup",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateSecurityGroup",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeLaunchTemplateVersions",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeLaunchTemplateVersions",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Write",
      "action": "ec2:RunInstances",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:RunInstances",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeSecurityGroups",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeSecurityGroups",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Read",
      "action": "ec2:GetConsoleOutput",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:GetConsoleOutput",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "List",
      "action": "ec2:DescribeSubnets",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DescribeSubnets",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Permissions management",
      "action": "iam:CreateInstanceProfile",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:CreateInstanceProfile",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "iam:DeleteInstanceProfile",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:DeleteInstanceProfile",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "iam:RemoveRoleFromInstanceProfile",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:RemoveRoleFromInstanceProfile",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Permissions management",
      "action": "iam:AddRoleToInstanceProfile",
      "condition": null,
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "iam:AddRoleToInstanceProfile",
      "privesc": false,
      "resource_exposure": true
    },
    {
      "access_level": "Tagging",
      "action": "ec2:CreateTags",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": [
            "eks",
            "eks:cluster-name",
            "eks:nodegroup-name",
            "kubernetes.io/cluster/*"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:CreateTags",
      "privesc": false,
      "resource_exposure": false
    },
    {
      "access_level": "Tagging",
      "action": "ec2:DeleteTags",
      "condition": {
        "ForAnyValue:StringLike": {
          "aws:TagKeys": [
            "eks",
            "eks:cluster-name",
            "eks:nodegroup-name",
            "kubernetes.io/cluster/*"
          ]
        }
      },
      "credentials_exposure": false,
      "data_access": false,
      "effective_action": "ec2:DeleteTags",
      "privesc": false,
      "resource_exposure": false
    }
  ],
  "grantless": false,
  "malformed": false,
  "name": "AWSServiceRoleForGammaInternalAmazonEKSNodegroup",
  "privesc": true,
  "resource_exposure": true,
  "undocumented_actions": false,
  "unknown_actions": [],
  "updatedate": null,
  "version": "v1"
}